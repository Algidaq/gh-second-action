name: Job Artifacts
on: 
    push:
        branches: 
            - main
env:
  FRONTEND_WORKSPACE: frontend
jobs:
    test:
        runs-on: ubuntu-latest
        steps:
           - name: clone code 
             uses: actions/checkout@v5
           - name: caching deps 
             uses: actions/cache@v3
             with:
              path: ~/.npm
              key: deps-node-modules-${{hashFiles('**/package-lock.json')}}
           - name: install deps
             run: npm ci --workspace=frontend
           - name: lint code
             run: npm run lint --workspace=${{env.FRONTEND_WORKSPACE}}
           - name: run unit test
             run: npm run test --workspace=${{env.FRONTEND_WORKSPACE}}
    build:
        needs: test
        runs-on: ubuntu-latest
        outputs:
          script-file: ${{steps.settingOutputs.outputs.script-file}}
        steps:
            - name: clone code
              uses: actions/checkout@v5
            - name: caching deps
              uses: actions/cache@v3
              with:
                path: ~/.npm
                key: deps-node-modules-${{hashFiles('**/package-lock.json')}}
            - name: install deps 
              run: npm ci --workspace=${{env.FRONTEND_WORKSPACE}}
            - name: build code 
              run: npm run build --workspace=${{env.FRONTEND_WORKSPACE}}
            - name: Setting Output
              id: settingOutputs
              run: find frontend/dist/**/*.js -type f -execdir echo  "script-file={}" >> "$GITHUB_OUTPUT" ";"
            - name: upload artifacts
              uses: actions/upload-artifact@v4
              with:
                name: frontend-artifact
                path: |
                    frontend/dist
                    frontend/package.json
    deploy:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: download build artifact
              uses: actions/download-artifact@v4
              with:
                name: frontend-artifact
            - name: echo js file 
              run: echo ${{needs.build.outputs.script-file}}
            - name: deploying..
              run: ls -l
